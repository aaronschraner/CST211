a
3
LinkedList
y
isEmpty(): bool
returns if the list is empty
First(): const Node<T>&
returns a reference to the first node in the list 
Last(): const Node<T>&
returns a reference to the last node in the list
Prepend(elem:T*):void
prepend a given element at the start of the list
Append(elem:T*):void
append a given element at the end of the list
Purge(): void
delete every element in the list
Extract(T: key): Node<T>&
(guessing from UML) returns the first node with contents matching <key>
InsertAfter(key:T, value:T*): void
(guessing from UML) find a node with Extract(key) and append an element after it
InsertBefore(key:T, value:T*): void
(guessing from UML) find a node with Extract(key) and prepend an element before it
Begin(): Iterator<T>
return an iterator to the first node in the list
End(): Iterator<T>
return an iterator to the last node in the list
